待办事宜：
继续使用云项目的类似fetch, promise机制封装完成数据交互；
cookie和session要上，用上vuex的状态管理；
组件之间的数据传递要用上；
组件之间的局部跳转，不通过路由的机制，类似于tab页面；
引入element的元素进来；

阅读葛然的代码，并交流沟通；

做一些基础的网页布局，包括登录页面和主页；
能够以列表的形式，加载不确定行的数据；

 .then(function (response) {
        console.log(response);
      })

 .then(response => response.json())
      .then(data => {
        console.log(data)
      })


待探索疑问：
1、尝试fetch的时候，一直json化失败，后来服务器端返回改为  res.end('"login_ok"');，才搞定了，然后才能获取到data的数据。


function loginCheck () {
      var p = new Promise () {function (resolve, reject) {
        fetch('http://127.0.0.1:9090/login?name=yeyulin&pwd=866')
        .then(function (response) {
          console.log(response);
          return response.json();
        })
        .then(function (data) {
          console.log(data);
          var retvalue = data;
          // 检测登录的结果是否正确
          if (retvalue === 'login_ok') {
            console.log('login success.');
            resolve(data);
          } else {
            console.log('login fail.');
            reject(new Error('login err.'));
          }})}
          return p;
      }
    }
    
    
      